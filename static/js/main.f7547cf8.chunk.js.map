{"version":3,"sources":["Forecast.js","Home.js","index.js"],"names":["Forecast","string","weather","useContext","myContext","weatherDesc","description","weatherStats","main","weatherCityName","name","weatherCountryName","sys","country","undefined","className","charAt","toUpperCase","slice","countryname","countryArray","code","index","findIndex","item","getCountryName","feels_like","humidity","pressure","wind","speed","createContext","Home","props","useState","setWeather","input","setInput","statusIsOK","cod","type","placeholder","value","onChange","e","target","onClick","weatherAPI","process","fetch","then","response","ok","json","Error","catch","error","alert","fetchData","Provider","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7547cf8.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\r\nimport { myContext } from './Home';\r\nfunction Forecast() {\r\n\r\nconst weather = useContext(myContext);\r\n\r\nconst weatherDesc = weather.weather[0].description;\r\nconst weatherStats = weather.main;\r\nconst weatherCityName = weather.name;\r\nconst weatherCountryName = weather.sys.country;\r\n   \r\nfunction capitalizeFirstLetter(string) {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nfunction getCountryName(countryname) {\r\n    const countryArray = [ \r\n        {name: 'Afghanistan', code: 'AF'}, \r\n        {name: 'Ã…land Islands', code: 'AX'}, \r\n        {name: 'Albania', code: 'AL'}, \r\n        {name: 'Algeria', code: 'DZ'}, \r\n        {name: 'American Samoa', code: 'AS'}, \r\n        {name: 'Andorra', code: 'AD'}, \r\n        {name: 'Angola', code: 'AO'}, \r\n        {name: 'Anguilla', code: 'AI'}, \r\n        {name: 'Antarctica', code: 'AQ'}, \r\n        {name: 'Antigua and Barbuda', code: 'AG'}, \r\n        {name: 'Argentina', code: 'AR'}, \r\n        {name: 'Armenia', code: 'AM'}, \r\n        {name: 'Aruba', code: 'AW'}, \r\n        {name: 'Australia', code: 'AU'}, \r\n        {name: 'Austria', code: 'AT'}, \r\n        {name: 'Azerbaijan', code: 'AZ'}, \r\n        {name: 'Bahamas', code: 'BS'}, \r\n        {name: 'Bahrain', code: 'BH'}, \r\n        {name: 'Bangladesh', code: 'BD'}, \r\n        {name: 'Barbados', code: 'BB'}, \r\n        {name: 'Belarus', code: 'BY'}, \r\n        {name: 'Belgium', code: 'BE'}, \r\n        {name: 'Belize', code: 'BZ'}, \r\n        {name: 'Benin', code: 'BJ'}, \r\n        {name: 'Bermuda', code: 'BM'}, \r\n        {name: 'Bhutan', code: 'BT'}, \r\n        {name: 'Bolivia', code: 'BO'}, \r\n        {name: 'Bosnia and Herzegovina', code: 'BA'}, \r\n        {name: 'Botswana', code: 'BW'}, \r\n        {name: 'Bouvet Island', code: 'BV'}, \r\n        {name: 'Brazil', code: 'BR'}, \r\n        {name: 'British Indian Ocean Territory', code: 'IO'}, \r\n        {name: 'Brunei Darussalam', code: 'BN'}, \r\n        {name: 'Bulgaria', code: 'BG'}, \r\n        {name: 'Burkina Faso', code: 'BF'}, \r\n        {name: 'Burundi', code: 'BI'}, \r\n        {name: 'Cambodia', code: 'KH'}, \r\n        {name: 'Cameroon', code: 'CM'}, \r\n        {name: 'Canada', code: 'CA'}, \r\n        {name: 'Cape Verde', code: 'CV'}, \r\n        {name: 'Cayman Islands', code: 'KY'}, \r\n        {name: 'Central African Republic', code: 'CF'}, \r\n        {name: 'Chad', code: 'TD'}, \r\n        {name: 'Chile', code: 'CL'}, \r\n        {name: 'China', code: 'CN'}, \r\n        {name: 'Christmas Island', code: 'CX'}, \r\n        {name: 'Cocos (Keeling) Islands', code: 'CC'}, \r\n        {name: 'Colombia', code: 'CO'}, \r\n        {name: 'Comoros', code: 'KM'}, \r\n        {name: 'Congo', code: 'CG'}, \r\n        {name: 'Congo, The Democratic Republic of the', code: 'CD'}, \r\n        {name: 'Cook Islands', code: 'CK'}, \r\n        {name: 'Costa Rica', code: 'CR'}, \r\n        {name: 'Cote D\\'Ivoire', code: 'CI'}, \r\n        {name: 'Croatia', code: 'HR'}, \r\n        {name: 'Cuba', code: 'CU'}, \r\n        {name: 'Cyprus', code: 'CY'}, \r\n        {name: 'Czech Republic', code: 'CZ'}, \r\n        {name: 'Denmark', code: 'DK'}, \r\n        {name: 'Djibouti', code: 'DJ'}, \r\n        {name: 'Dominica', code: 'DM'}, \r\n        {name: 'Dominican Republic', code: 'DO'}, \r\n        {name: 'Ecuador', code: 'EC'}, \r\n        {name: 'Egypt', code: 'EG'}, \r\n        {name: 'El Salvador', code: 'SV'}, \r\n        {name: 'Equatorial Guinea', code: 'GQ'}, \r\n        {name: 'Eritrea', code: 'ER'}, \r\n        {name: 'Estonia', code: 'EE'}, \r\n        {name: 'Ethiopia', code: 'ET'}, \r\n        {name: 'Falkland Islands (Malvinas)', code: 'FK'}, \r\n        {name: 'Faroe Islands', code: 'FO'}, \r\n        {name: 'Fiji', code: 'FJ'}, \r\n        {name: 'Finland', code: 'FI'}, \r\n        {name: 'France', code: 'FR'}, \r\n        {name: 'French Guiana', code: 'GF'}, \r\n        {name: 'French Polynesia', code: 'PF'}, \r\n        {name: 'French Southern Territories', code: 'TF'}, \r\n        {name: 'Gabon', code: 'GA'}, \r\n        {name: 'Gambia', code: 'GM'}, \r\n        {name: 'Georgia', code: 'GE'}, \r\n        {name: 'Germany', code: 'DE'}, \r\n        {name: 'Ghana', code: 'GH'}, \r\n        {name: 'Gibraltar', code: 'GI'}, \r\n        {name: 'Greece', code: 'GR'}, \r\n        {name: 'Greenland', code: 'GL'}, \r\n        {name: 'Grenada', code: 'GD'}, \r\n        {name: 'Guadeloupe', code: 'GP'}, \r\n        {name: 'Guam', code: 'GU'}, \r\n        {name: 'Guatemala', code: 'GT'}, \r\n        {name: 'Guernsey', code: 'GG'}, \r\n        {name: 'Guinea', code: 'GN'}, \r\n        {name: 'Guinea-Bissau', code: 'GW'}, \r\n        {name: 'Guyana', code: 'GY'}, \r\n        {name: 'Haiti', code: 'HT'}, \r\n        {name: 'Heard Island and Mcdonald Islands', code: 'HM'}, \r\n        {name: 'Holy See (Vatican City State)', code: 'VA'}, \r\n        {name: 'Honduras', code: 'HN'}, \r\n        {name: 'Hong Kong', code: 'HK'}, \r\n        {name: 'Hungary', code: 'HU'}, \r\n        {name: 'Iceland', code: 'IS'}, \r\n        {name: 'India', code: 'IN'}, \r\n        {name: 'Indonesia', code: 'ID'}, \r\n        {name: 'Iran, Islamic Republic Of', code: 'IR'}, \r\n        {name: 'Iraq', code: 'IQ'}, \r\n        {name: 'Ireland', code: 'IE'}, \r\n        {name: 'Isle of Man', code: 'IM'}, \r\n        {name: 'Israel', code: 'IL'}, \r\n        {name: 'Italy', code: 'IT'}, \r\n        {name: 'Jamaica', code: 'JM'}, \r\n        {name: 'Japan', code: 'JP'}, \r\n        {name: 'Jersey', code: 'JE'}, \r\n        {name: 'Jordan', code: 'JO'}, \r\n        {name: 'Kazakhstan', code: 'KZ'}, \r\n        {name: 'Kenya', code: 'KE'}, \r\n        {name: 'Kiribati', code: 'KI'}, \r\n        {name: 'Democratic People\\'s Republic of Korea', code: 'KP'}, \r\n        {name: 'Republic of Korea', code: 'KR'}, \r\n        {name: 'Kuwait', code: 'KW'}, \r\n        {name: 'Kyrgyzstan', code: 'KG'}, \r\n        {name: 'Lao People\\'S Democratic Republic', code: 'LA'}, \r\n        {name: 'Latvia', code: 'LV'}, \r\n        {name: 'Lebanon', code: 'LB'}, \r\n        {name: 'Lesotho', code: 'LS'}, \r\n        {name: 'Liberia', code: 'LR'}, \r\n        {name: 'Libyan Arab Jamahiriya', code: 'LY'}, \r\n        {name: 'Liechtenstein', code: 'LI'}, \r\n        {name: 'Lithuania', code: 'LT'}, \r\n        {name: 'Luxembourg', code: 'LU'}, \r\n        {name: 'Macao', code: 'MO'}, \r\n        {name: 'Macedonia, The Former Yugoslav Republic of', code: 'MK'}, \r\n        {name: 'Madagascar', code: 'MG'}, \r\n        {name: 'Malawi', code: 'MW'}, \r\n        {name: 'Malaysia', code: 'MY'}, \r\n        {name: 'Maldives', code: 'MV'}, \r\n        {name: 'Mali', code: 'ML'}, \r\n        {name: 'Malta', code: 'MT'}, \r\n        {name: 'Marshall Islands', code: 'MH'}, \r\n        {name: 'Martinique', code: 'MQ'}, \r\n        {name: 'Mauritania', code: 'MR'}, \r\n        {name: 'Mauritius', code: 'MU'}, \r\n        {name: 'Mayotte', code: 'YT'}, \r\n        {name: 'Mexico', code: 'MX'}, \r\n        {name: 'Micronesia, Federated States of', code: 'FM'}, \r\n        {name: 'Moldova, Republic of', code: 'MD'}, \r\n        {name: 'Monaco', code: 'MC'}, \r\n        {name: 'Mongolia', code: 'MN'}, \r\n        {name: 'Montserrat', code: 'MS'}, \r\n        {name: 'Morocco', code: 'MA'}, \r\n        {name: 'Mozambique', code: 'MZ'}, \r\n        {name: 'Myanmar', code: 'MM'}, \r\n        {name: 'Namibia', code: 'NA'}, \r\n        {name: 'Nauru', code: 'NR'}, \r\n        {name: 'Nepal', code: 'NP'}, \r\n        {name: 'Netherlands', code: 'NL'}, \r\n        {name: 'Netherlands Antilles', code: 'AN'}, \r\n        {name: 'New Caledonia', code: 'NC'}, \r\n        {name: 'New Zealand', code: 'NZ'}, \r\n        {name: 'Nicaragua', code: 'NI'}, \r\n        {name: 'Niger', code: 'NE'}, \r\n        {name: 'Nigeria', code: 'NG'}, \r\n        {name: 'Niue', code: 'NU'}, \r\n        {name: 'Norfolk Island', code: 'NF'}, \r\n        {name: 'Northern Mariana Islands', code: 'MP'}, \r\n        {name: 'Norway', code: 'NO'}, \r\n        {name: 'Oman', code: 'OM'}, \r\n        {name: 'Pakistan', code: 'PK'}, \r\n        {name: 'Palau', code: 'PW'}, \r\n        {name: 'Palestinian Territory, Occupied', code: 'PS'}, \r\n        {name: 'Panama', code: 'PA'}, \r\n        {name: 'Papua New Guinea', code: 'PG'}, \r\n        {name: 'Paraguay', code: 'PY'}, \r\n        {name: 'Peru', code: 'PE'}, \r\n        {name: 'Philippines', code: 'PH'}, \r\n        {name: 'Pitcairn', code: 'PN'}, \r\n        {name: 'Poland', code: 'PL'}, \r\n        {name: 'Portugal', code: 'PT'}, \r\n        {name: 'Puerto Rico', code: 'PR'}, \r\n        {name: 'Qatar', code: 'QA'}, \r\n        {name: 'Reunion', code: 'RE'}, \r\n        {name: 'Romania', code: 'RO'}, \r\n        {name: 'Russian Federation', code: 'RU'}, \r\n        {name: 'RWANDA', code: 'RW'}, \r\n        {name: 'Saint Helena', code: 'SH'}, \r\n        {name: 'Saint Kitts and Nevis', code: 'KN'}, \r\n        {name: 'Saint Lucia', code: 'LC'}, \r\n        {name: 'Saint Pierre and Miquelon', code: 'PM'}, \r\n        {name: 'Saint Vincent and the Grenadines', code: 'VC'}, \r\n        {name: 'Samoa', code: 'WS'}, \r\n        {name: 'San Marino', code: 'SM'}, \r\n        {name: 'Sao Tome and Principe', code: 'ST'}, \r\n        {name: 'Saudi Arabia', code: 'SA'}, \r\n        {name: 'Senegal', code: 'SN'}, \r\n        {name: 'Serbia and Montenegro', code: 'CS'}, \r\n        {name: 'Seychelles', code: 'SC'}, \r\n        {name: 'Sierra Leone', code: 'SL'}, \r\n        {name: 'Singapore', code: 'SG'}, \r\n        {name: 'Slovakia', code: 'SK'}, \r\n        {name: 'Slovenia', code: 'SI'}, \r\n        {name: 'Solomon Islands', code: 'SB'}, \r\n        {name: 'Somalia', code: 'SO'}, \r\n        {name: 'South Africa', code: 'ZA'}, \r\n        {name: 'South Georgia and the South Sandwich Islands', code: 'GS'}, \r\n        {name: 'Spain', code: 'ES'}, \r\n        {name: 'Sri Lanka', code: 'LK'}, \r\n        {name: 'Sudan', code: 'SD'}, \r\n        {name: 'Suriname', code: 'SR'}, \r\n        {name: 'Svalbard and Jan Mayen', code: 'SJ'}, \r\n        {name: 'Swaziland', code: 'SZ'}, \r\n        {name: 'Sweden', code: 'SE'}, \r\n        {name: 'Switzerland', code: 'CH'}, \r\n        {name: 'Syrian Arab Republic', code: 'SY'}, \r\n        {name: 'Taiwan, Province of China', code: 'TW'}, \r\n        {name: 'Tajikistan', code: 'TJ'}, \r\n        {name: 'Tanzania, United Republic of', code: 'TZ'}, \r\n        {name: 'Thailand', code: 'TH'}, \r\n        {name: 'Timor-Leste', code: 'TL'}, \r\n        {name: 'Togo', code: 'TG'}, \r\n        {name: 'Tokelau', code: 'TK'}, \r\n        {name: 'Tonga', code: 'TO'}, \r\n        {name: 'Trinidad and Tobago', code: 'TT'}, \r\n        {name: 'Tunisia', code: 'TN'}, \r\n        {name: 'Turkey', code: 'TR'}, \r\n        {name: 'Turkmenistan', code: 'TM'}, \r\n        {name: 'Turks and Caicos Islands', code: 'TC'}, \r\n        {name: 'Tuvalu', code: 'TV'}, \r\n        {name: 'Uganda', code: 'UG'}, \r\n        {name: 'Ukraine', code: 'UA'}, \r\n        {name: 'United Arab Emirates', code: 'AE'}, \r\n        {name: 'United Kingdom', code: 'GB'}, \r\n        {name: 'United States', code: 'US'}, \r\n        {name: 'United States Minor Outlying Islands', code: 'UM'}, \r\n        {name: 'Uruguay', code: 'UY'}, \r\n        {name: 'Uzbekistan', code: 'UZ'}, \r\n        {name: 'Vanuatu', code: 'VU'}, \r\n        {name: 'Venezuela', code: 'VE'}, \r\n        {name: 'Viet Nam', code: 'VN'}, \r\n        {name: 'Virgin Islands, British', code: 'VG'}, \r\n        {name: 'Virgin Islands, U.S.', code: 'VI'}, \r\n        {name: 'Wallis and Futuna', code: 'WF'}, \r\n        {name: 'Western Sahara', code: 'EH'}, \r\n        {name: 'Yemen', code: 'YE'}, \r\n        {name: 'Zambia', code: 'ZM'}, \r\n        {name: 'Zimbabwe', code: 'ZW'} \r\n      ]\r\n\r\n      const index = countryArray.findIndex(item => item.code === countryname);\r\n      return countryArray[index].name;\r\n}\r\n\r\nreturn (<>\r\n \r\n    {(weather === undefined) || \r\n      <div className='forecast-layout'>\r\n          <span className=\"weather-description\">{capitalizeFirstLetter(weatherDesc)} in {weatherCityName}, {getCountryName(weatherCountryName)}</span>\r\n          \r\n          <div className=\"forecast-flex\">\r\n      \r\n              <div className=\"flex-item\">\r\n                  <span>Feels like</span>\r\n                  <span>{weatherStats.feels_like}ËšF</span>\r\n                  \r\n              </div>\r\n      \r\n              <div className=\"flex-item\">\r\n                  <span>Humidity</span>\r\n                  <span>{weatherStats.humidity}%</span>\r\n              </div>\r\n      \r\n              <div className=\"flex-item\">\r\n                  <span>Pressure</span>\r\n                  <span>{weatherStats.pressure} Pa</span>\r\n              </div>\r\n      \r\n              <div className=\"flex-item\">\r\n                  <span>Wind speed</span>\r\n                  <span>{weather.wind.speed} m/s</span>\r\n              </div>\r\n          \r\n      </div>\r\n      </div>\r\n      }\r\n      </>\r\n      )\r\n    \r\n}\r\n\r\nexport default Forecast;\r\n\r\n","import './home.css'\r\nimport React, {useState} from 'react';\r\nimport { createContext } from 'react';\r\nimport Forecast from './Forecast';\r\nexport const myContext = createContext();\r\n\r\nfunction Home(props) {\r\n\r\nconst [weather, setWeather] = useState();\r\nconst [input, setInput] = useState();\r\n\r\n\r\n{/* make API weather data request with fetch*/}\r\n\r\nfunction fetchData() {\r\n\r\nif (input === null) {alert(\"Please type city name\")\r\nreturn;\r\n}\r\n\r\n let weatherAPI = `https://api.openweathermap.org/data/2.5/weather?q=${input}&appid=${process.env.REACT_APP_API_KEY}&units=imperial`;\r\n    \r\n fetch(weatherAPI, {\r\n      \"method\": \"GET\"\r\n    }).then((response) => {\r\n    if (response.ok){\r\n    return response.json()\r\n    }\r\n    else {\r\n      setWeather({cod: 404})\r\n      throw new Error('Error: could not fetch weather API data')\r\n    }\r\n    }).then((response) => {\r\n      setWeather({...response})\r\n    }).catch((error)=>{\r\n    \r\n    })\r\n\r\n  }\r\n\r\n  function apiError() {\r\n    return (\r\n    <div className=\"contentLayout\">\r\n    <span className=\"temp-stat\">Couldn't retrieve API data (Check for spelling errors)</span>\r\n    </div>\r\n\r\n    )\r\n  }\r\n \r\n  function enterInput() {\r\n    return (\r\n      <div className=\"contentLayout\">\r\n      <span className=\"temp-stat\">Enter location to check its current weather</span>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  function statusIsOK() {\r\n    if (weather?.cod >= 200 && weather?.cod <= 299) return true;\r\n    else return false;\r\n   \r\n  }\r\n\r\n\r\n\r\n\r\nreturn(\r\n  <>\r\n \r\n {/* Topnav*/}\r\n        <h2>Weather Stats Website</h2>\r\n        <div className=\"topnav\">\r\n          <input className=\"location-input\" type=\"text\" placeholder='city' value= {input} onChange={(e) => setInput(e.target.value)} name=\"search\" />\r\n          <button type=\"button\" onClick = {(e)=> {fetchData()}}>Search</button>\r\n        </div> \r\n\r\n {/* Pass context to Forecast component*/}\r\n<myContext.Provider value = {weather}>\r\n  {statusIsOK() &&  <Forecast/>}\r\n</myContext.Provider>\r\n\r\n\r\n\r\n  {/* API call error */}\r\n\r\n     {weather !== undefined && !statusIsOK() &&  apiError()}\r\n       \r\n  {/* Footer */}\r\n        <footer><span>Author: Peter Pileta  -  </span><a href=\"https://github.com/peterpileta\">GitHub</a></footer>\r\n     \r\n      </>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Home from './Home';\r\n\r\n\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n <Home />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}